#include <nRF24L01.h>
#include <printf.h>
#include <RF24.h>
#include <RF24_config.h>

#include <SPI.h> 
#include <nRF24L01.h>
#include <RF24.h>
RF24 radio(7, 8);     // SPI통신을 위한 (CE, CSN) 핀 선언
const byte address[6] = "00001"; // 송신기와 수신기가 동일한 값으로 주소 설정함(5자리)
int A_1A =A2;
int A_1B =A1;
int B_1A =A4;
int B_1B =A3;

int A_1A2 =9;
int A_1B2 =10;
int B_1A2 =1;
int B_1B2 =2;

int speed = 255;

void setup() {
  Serial.begin(9600);
  radio.begin();
  radio.openReadingPipe(0, address);// 데이터를 받을 송신기 주소를 설정
  radio.setPALevel(RF24_PA_MIN); // 송신거리에 따른, 전원공급 파워레벨 설정
//(최소) RF24_PA_MIN / RF24_PA_LOW / RF24_PA_HIGH / RF24_PA_MAX (최대) 설정가능
//송신이 약하다고 판단될 경우 nRF24모듈의 GND와 3.3V 단자에 전해콘덴서(10uF이상:+를3.3V연결)사용권장
  radio.startListening();   // 모듈을 수신기(상태)로 설정
    pinMode(A_1A, OUTPUT);
  pinMode(A_1B, OUTPUT);
  pinMode(B_1A, OUTPUT);
  pinMode(B_1B, OUTPUT);
   

}
void loop() {
  if (radio.available()) {
    char text[32];
    char text0;   // 데이터를 수신 받을 변수 설정
    radio.read(&text, sizeof(text)); // 수신되는 데이터 길이만큼 읽어 저장
    Serial.println(text);
    text0 = text[0];
    switch(text0){
      case 'w':
      analogWrite(A_1A, speed);
    analogWrite(A_1B, 0);   
    //모터B
    analogWrite(B_1A, speed);
    analogWrite(B_1B, 0); 
  break;
  case 's':
  analogWrite(A_1A, 0);
    analogWrite(A_1B, speed);   
    //모터B
    analogWrite(B_1A, 0);
    analogWrite(B_1B, speed); 
    break;
    case 'a':
  analogWrite(A_1A, 0);
    analogWrite(A_1B,speed);   
    //모터B
    analogWrite(B_1A, speed);
    analogWrite(B_1B, 0); 
    break;
    case 'd':
  analogWrite(A_1A, speed);
    analogWrite(A_1B,0);   
    //모터B
    analogWrite(B_1A, 0);
    analogWrite(B_1B, speed); 
    break;
    }
}
  }
